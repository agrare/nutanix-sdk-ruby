=begin
#Nutanix Intentful API

#Move programming from the user to the machine.

The version of the OpenAPI document: 3.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nutanix::ServicesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ServicesApi' do
  before do
    # run before each test
    @api_instance = Nutanix::ServicesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ServicesApi' do
    it 'should create an instance of ServicesApi' do
      expect(@api_instance).to be_instance_of(Nutanix::ServicesApi)
    end
  end

  # unit tests for services_disaster_recovery_post
  # Manage Disaster Recovery service.
  # Manage Disaster Recovery service.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ServiceResponse]
  describe 'services_disaster_recovery_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for services_files_manager_post
  # Manage Files Manager service.
  # Manage Files Manager service.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ServiceResponse]
  describe 'services_files_manager_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for services_flow_security_planning_cluster_capability_get
  # Cluster feature status.
  # Cluster feature capability status.
  # @param [Hash] opts the optional parameters
  # @return [SecurityPlanningClusterCapabilityStatus]
  describe 'services_flow_security_planning_cluster_capability_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for services_flow_security_planning_data_collector_upgrade_get
  # Data Collector Upgrade Status.
  # Data Collector Upgrade Status.
  # @param [Hash] opts the optional parameters
  # @return [SecurityPlanningDataCollectorUpgradeStatus]
  describe 'services_flow_security_planning_data_collector_upgrade_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for services_flow_security_planning_data_collector_upgrade_post
  # Security Planning Data Collector Upgrade.
  # Security Planning Data Collector Upgrade.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ServiceConfigStatus]
  describe 'services_flow_security_planning_data_collector_upgrade_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for services_flow_security_planning_post
  # Security Planning Configuration.
  # Security Planning Configuration.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ServiceConfigStatus]
  describe 'services_flow_security_planning_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for services_flow_security_planning_status_get
  # Service status.
  # Service status.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_capabilities Whether or not to include the capabilities of this service in the response. Capabilities for service include if it can be enabled/disabled or not. 
  # @return [ServiceEnablementStatus]
  describe 'services_flow_security_planning_status_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for services_microseg_post
  # Manage Microsegmentation.
  # Manage Microsegmentation.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ServiceConfigStatus]
  describe 'services_microseg_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for services_nucalm_post
  # Manage NuCalm service.
  # Manage NuCalm service.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ServiceConfigStatus]
  describe 'services_nucalm_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for services_oss_post
  # Manage Bucket Service Manager service.
  # Manage Bucket Service Manager service.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ServiceResponse]
  describe 'services_oss_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for services_service_name_cluster_capability_get
  # Cluster feature status.
  # Cluster feature capability status.
  # @param service_name The service name.
  # @param [Hash] opts the optional parameters
  # @return [ClusterCapabilityStatus]
  describe 'services_service_name_cluster_capability_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for services_service_name_status_get
  # Service status.
  # Service status.
  # @param service_name The service name.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_capabilities Whether or not to include the capabilities of this service in the response. Capabilities for service include if it can be enabled/disabled or not. 
  # @return [ServiceEnablementStatus]
  describe 'services_service_name_status_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for services_xfit_post
  # Manage xfit service.
  # Manage xfit service, including enabling the service.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ServiceConfigStatus]
  describe 'services_xfit_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
