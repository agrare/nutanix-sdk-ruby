=begin
#Nutanix Intentful API

#Move programming from the user to the machine.

The version of the OpenAPI document: 3.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nutanix::RemoteConnectionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RemoteConnectionsApi' do
  before do
    # run before each test
    @api_instance = Nutanix::RemoteConnectionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RemoteConnectionsApi' do
    it 'should create an instance of RemoteConnectionsApi' do
      expect(@api_instance).to be_instance_of(Nutanix::RemoteConnectionsApi)
    end
  end

  # unit tests for az_proxy_post
  # Proxies request to remote AZ
  # Proxies request to remote cluster, uses remote connection to call endpoint on remote cluster 
  # @param method HTTP method to call
  # @param url_path URL path to call on remote cluster
  # @param [Hash] opts the optional parameters
  # @option opts [String] :az_name Availability Zone Name
  # @option opts [String] :content_type content type for the call
  # @option opts [Hash<String, Object>] :az_proxy_body 
  # @return [nil]
  describe 'az_proxy_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for fanout_proxy_post
  # Proxies request to remote cluster
  # Proxies request to remote cluster, uses remote connection to call endpoint on remote cluster. 
  # @param method HTTP method to call
  # @param url_path URL path to call on remote cluster
  # @param [Hash] opts the optional parameters
  # @option opts [String] :az_name One of the availability zones name of Xi portal.
  # @option opts [String] :az_physical_uuid One of the availability zones uuid of Xi portal.
  # @option opts [String] :remote_cluster_uuid Cluster uuid of remote PC or PE cluster.
  # @option opts [String] :content_type content type for the call
  # @option opts [String] :kind entity kind e.g. vm, network
  # @option opts [String] :entity_uuid The UUID of the entity.
  # @option opts [String] :tenant_uuid The UUID of the tenant.
  # @option opts [Integer] :timeout_ms Additional timeout in milliseconds for fanout calls.
  # @option opts [Hash<String, Object>] :fanout_proxy_body 
  # @return [nil]
  describe 'fanout_proxy_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for remote_connections_list_post
  # Get list of remote connections
  # Retrieve list of remote connections
  # @param [Hash] opts the optional parameters
  # @option opts [RemoteConnectionListMetadata] :get_entities_request A remote connection object
  # @return [RemoteConnectionListIntentResponse]
  describe 'remote_connections_list_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for remote_connections_post
  # Creates a remote connection
  # Creates a remote connection
  # @param body Remote connection details
  # @param [Hash] opts the optional parameters
  # @return [RemoteConnectionIntentResponse]
  describe 'remote_connections_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for remote_connections_uuid_delete
  # Delete an existing remote connection
  # Delete existing remote connection and its information
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [RemoteConnectionIntentResponse]
  describe 'remote_connections_uuid_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for remote_connections_uuid_get
  # Used to fetch remote connection details
  # Get remote connection
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [RemoteConnectionIntentResponse]
  describe 'remote_connections_uuid_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for remote_connections_uuid_put
  # Used to update remote connection details
  # Update remote connection
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @option opts [RemoteConnectionIntentInput] :body Remote connection details
  # @return [RemoteConnectionIntentResponse]
  describe 'remote_connections_uuid_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for remote_rpc_request_post
  # Execute Remote RPC
  # Execute Remote RPC
  # @param service_name Name of the service whose RPC needs to be invoked.
  # @param port Port at which the service is running
  # @param payload RPC payload.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :timeout_ms timeout in milliseconds.
  # @option opts [String] :base_url base url for rpc call.
  # @return [nil]
  describe 'remote_rpc_request_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
