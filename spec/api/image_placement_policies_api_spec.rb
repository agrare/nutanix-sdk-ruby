=begin
#Nutanix Intentful API

#Move programming from the user to the machine.

The version of the OpenAPI document: 3.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nutanix::ImagePlacementPoliciesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ImagePlacementPoliciesApi' do
  before do
    # run before each test
    @api_instance = Nutanix::ImagePlacementPoliciesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ImagePlacementPoliciesApi' do
    it 'should create an instance of ImagePlacementPoliciesApi' do
      expect(@api_instance).to be_instance_of(Nutanix::ImagePlacementPoliciesApi)
    end
  end

  # unit tests for images_placement_policies_list_post
  # Get a list of existing image_placement_policies
  # This operation gets a list of image_placement_policies, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed. 
  # @param get_entities_request 
  # @param [Hash] opts the optional parameters
  # @return [ImagePlacementPolicyListIntentResponse]
  describe 'images_placement_policies_list_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for images_placement_policies_post
  # Create a new image_placement_policy
  # Create a placement policy object by specifiying Image and Cluster categories and placement type. Based on this input the Images matching the category will be placed on the cluster which match the cluster category. 
  # @param [Hash] opts the optional parameters
  # @option opts [ImagePlacementPolicyIntentInput] :body 
  # @return [ImagePlacementPolicyIntentResponse]
  describe 'images_placement_policies_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for images_placement_policies_uuid_delete
  # Delete a existing image_placement_policy
  # This operation submits a request to delete a existing image_placement_policy.
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [ImagePlacementPolicyIntentResponse]
  describe 'images_placement_policies_uuid_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for images_placement_policies_uuid_get
  # Get a existing image_placement_policy
  # This operation gets a existing image_placement_policy.
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [ImagePlacementPolicyIntentResponse]
  describe 'images_placement_policies_uuid_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for images_placement_policies_uuid_put
  # Update a existing image_placement_policy
  # This operation submits a request to update a existing image_placement_policy based on the input parameters. 
  # @param uuid The UUID of the entity.
  # @param body Image placement policy to be updated
  # @param [Hash] opts the optional parameters
  # @return [ImagePlacementPolicyIntentResponse]
  describe 'images_placement_policies_uuid_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
