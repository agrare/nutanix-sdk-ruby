=begin
#Nutanix Intentful API

#Move programming from the user to the machine.

The version of the OpenAPI document: 3.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nutanix::PortalServicesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PortalServicesApi' do
  before do
    # run before each test
    @api_instance = Nutanix::PortalServicesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PortalServicesApi' do
    it 'should create an instance of PortalServicesApi' do
      expect(@api_instance).to be_instance_of(Nutanix::PortalServicesApi)
    end
  end

  # unit tests for portal_services_software_software_type_list_post
  # Get all available software on Nutanix Portal
  # Get a list of portal software with specified type
  # @param software_type Software type
  # @param [Hash] opts the optional parameters
  # @option opts [SoftwareListMetadata] :get_entities_request 
  # @return [SoftwareListIntentResponse]
  describe 'portal_services_software_software_type_list_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for portal_services_software_software_type_version_get
  # Get specified software information
  # Get the software info with specified type and version
  # @param software_type Software type
  # @param version Software version
  # @param [Hash] opts the optional parameters
  # @return [PortalSoftware]
  describe 'portal_services_software_software_type_version_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for portal_services_support_cases_case_id_get
  # Get specified support case.
  # Returns the support case details for a given support case ID.
  # @param case_id ID of the support case.
  # @param [Hash] opts the optional parameters
  # @return [SupportCaseIntentResponse]
  describe 'portal_services_support_cases_case_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for portal_services_support_cases_list_post
  # List support cases.
  # List of support cases. Supported filters are - - cluster_reference - serial_number 
  # @param get_entities_request 
  # @param [Hash] opts the optional parameters
  # @return [SupportCaseListIntentResponse]
  describe 'portal_services_support_cases_list_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for portal_services_support_cases_post
  # Create support case.
  # Given a spec, creates a support case with associated metadata.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [SupportCaseIntentResponse]
  describe 'portal_services_support_cases_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for portal_services_support_cases_template_template_id_get
  # Get screen template from portal.
  # Given a template ID it fetches that template.
  # @param template_id ID of the screen for which it needs template.
  # @param [Hash] opts the optional parameters
  # @return [SupportCaseTemplateResponse]
  describe 'portal_services_support_cases_template_template_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for portal_services_support_cases_upload_post
  # Upload attachements for a specific support case.
  # Given an intentful spec, trigger ncc health check and log uploads for a specified support case.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [SupportCaseUploadIntentResponse]
  describe 'portal_services_support_cases_upload_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
