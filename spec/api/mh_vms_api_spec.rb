=begin
#Nutanix Intentful API

#Move programming from the user to the machine.

The version of the OpenAPI document: 3.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nutanix::MhVmsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MhVmsApi' do
  before do
    # run before each test
    @api_instance = Nutanix::MhVmsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MhVmsApi' do
    it 'should create an instance of MhVmsApi' do
      expect(@api_instance).to be_instance_of(Nutanix::MhVmsApi)
    end
  end

  # unit tests for mh_vms_list_post
  # Get a list of existing VMs
  # This operation gets a list of VMs, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed. 
  # @param get_entities_request 
  # @param [Hash] opts the optional parameters
  # @return [MhVmListIntentResponse]
  describe 'mh_vms_list_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for mh_vms_post
  # Create a new VM
  # This operation submits a request to create a new VM based on the input parameters. 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [MhVmIntentResponse]
  describe 'mh_vms_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for mh_vms_uuid_get
  # Get an existing VM
  # This operation gets an existing VM.
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [MhVmIntentResponse]
  describe 'mh_vms_uuid_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for mh_vms_uuid_put
  # Update an existing VM
  # This operation submits a request to update an existing VM based on the input parameters. 
  # @param uuid The UUID of the entity.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [MhVmIntentResponse]
  describe 'mh_vms_uuid_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for mh_vms_uuid_revert_post
  # Revert the VM to the given recovery point.
  # Submits a request to create a task handling the VM revert to a recovery point operation, returns a task reference. 
  # @param uuid The UUID of the entity.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ProceduralResponse]
  describe 'mh_vms_uuid_revert_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for mh_vms_uuid_snapshot_post
  # Create a VM recovery point.
  # Submits a request to create a task handling the snapshot operation on the VM, returns a task reference. This creates a point in time recovery point. 
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @option opts [MhVmSnapshotInput] :body 
  # @return [ProceduralResponse]
  describe 'mh_vms_uuid_snapshot_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
