=begin
#Nutanix Intentful API

#Move programming from the user to the machine.

The version of the OpenAPI document: 3.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nutanix::UsersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @api_instance = Nutanix::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instance of UsersApi' do
      expect(@api_instance).to be_instance_of(Nutanix::UsersApi)
    end
  end

  # unit tests for logout_get
  # Logs out the current user
  # Logs out the current user.
  # @param [Hash] opts the optional parameters
  # @return [LogoutResponse]
  describe 'logout_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_info_get
  # Retrieves the Access control policies and other user data for logged in user. 
  # Gets the Access Control Policies attached to a user, alongwith other user-specific information. 
  # @param [Hash] opts the optional parameters
  # @return [UserInfo]
  describe 'users_info_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_list_post
  # Get a list of existing Users
  # This operation gets a list of Users, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed. 
  # @param get_entities_request 
  # @param [Hash] opts the optional parameters
  # @return [UserListIntentResponse]
  describe 'users_list_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_me_get
  # Retrieves currently logged in user.
  # Displays the user currently logged in.
  # @param [Hash] opts the optional parameters
  # @return [UserIntentResponse]
  describe 'users_me_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_post
  # Create a new User
  # This operation submits a request to create a new User based on the input parameters. 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [UserIntentResponse]
  describe 'users_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_uuid_delete
  # Delete a existing User
  # This operation submits a request to delete a existing User.
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [UserIntentResponse]
  describe 'users_uuid_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_uuid_get
  # Get a existing User
  # This operation gets a existing User.
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [UserIntentResponse]
  describe 'users_uuid_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_uuid_project_usage_summary_get
  # Retrieves specified user resource domain information.
  # Retrieves specified user resource domain information.
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [UserUsageInProjects]
  describe 'users_uuid_project_usage_summary_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_uuid_put
  # Update a existing User
  # This operation submits a request to update a existing User based on the input parameters. 
  # @param uuid The UUID of the entity.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [UserIntentResponse]
  describe 'users_uuid_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
