=begin
#Nutanix Intentful API

#Move programming from the user to the machine.

The version of the OpenAPI document: 3.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nutanix::ActionRulesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ActionRulesApi' do
  before do
    # run before each test
    @api_instance = Nutanix::ActionRulesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ActionRulesApi' do
    it 'should create an instance of ActionRulesApi' do
      expect(@api_instance).to be_instance_of(Nutanix::ActionRulesApi)
    end
  end

  # unit tests for action_rules_list_post
  # Get a list of existing action_rule
  # This operation gets a list of action_rule, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed. 
  # @param get_entities_request 
  # @param [Hash] opts the optional parameters
  # @return [ActionRuleListIntentResponse]
  describe 'action_rules_list_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for action_rules_post
  # Create a new action_rule
  # This operation submits a request to create a new action_rule based on the input parameters. 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ActionRuleIntentResponse]
  describe 'action_rules_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for action_rules_trigger_post
  # Manually trigger action rules execution. 
  # Execute playbooks on demand using trigger information passed. 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ProceduralResponse]
  describe 'action_rules_trigger_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for action_rules_uuid_delete
  # Delete a existing action_rule
  # This operation submits a request to delete a existing action_rule.
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'action_rules_uuid_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for action_rules_uuid_get
  # Get a existing action_rule
  # This operation gets a existing action_rule.
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [ActionRuleIntentResponse]
  describe 'action_rules_uuid_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for action_rules_uuid_put
  # Update a existing action_rule
  # This operation submits a request to update a existing action_rule based on the input parameters. 
  # @param uuid The UUID of the entity.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ActionRuleIntentResponse]
  describe 'action_rules_uuid_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for action_rules_validate_post
  # Validate an action rule
  # Validate an action rule without changing the rule. 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ActionRuleResources]
  describe 'action_rules_validate_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
