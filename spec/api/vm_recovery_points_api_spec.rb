=begin
#Nutanix Intentful API

#Move programming from the user to the machine.

The version of the OpenAPI document: 3.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nutanix::VmRecoveryPointsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'VmRecoveryPointsApi' do
  before do
    # run before each test
    @api_instance = Nutanix::VmRecoveryPointsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VmRecoveryPointsApi' do
    it 'should create an instance of VmRecoveryPointsApi' do
      expect(@api_instance).to be_instance_of(Nutanix::VmRecoveryPointsApi)
    end
  end

  # unit tests for vm_recovery_points_clone_post
  # Clone a vm recovery point for the given time point.
  # Submits a request to create a task handling the clone of a vm recovery point given a timestamp, returns the task reference. This operation is used to replicate a backend selected vm recovery point that is around the desired time point to a target AZ. 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ProceduralResponse]
  describe 'vm_recovery_points_clone_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for vm_recovery_points_list_post
  # Get a list of existing vm recovery point
  # This operation gets a list of vm recovery point, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed. 
  # @param get_entities_request 
  # @param [Hash] opts the optional parameters
  # @return [VmRecoveryPointListIntentResponse]
  describe 'vm_recovery_points_list_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for vm_recovery_points_post
  # Create a new vm recovery point
  # This operation submits a request to create a new vm recovery point based on the input parameters. 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [VmRecoveryPointIntentResponse]
  describe 'vm_recovery_points_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for vm_recovery_points_restore_post
  # Restore a vm recovery point for the given time point.
  # Submits a request to create a task handling the restore of a vm recovery point given a timestamp to recover to, returns the task reference. This operation is used to create a vm out of a backend selected vm recovery point that is around the desired time point. Follow the task to get the reference of the created vm. 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ProceduralResponse]
  describe 'vm_recovery_points_restore_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for vm_recovery_points_uuid_clone_post
  # Clone a vm_recovery_point.
  # Submits a request to create a task handling vm_recovery_point clone operation, returns a task reference. This replicates the vm_recovery_point to target availability zone. 
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @option opts [VmRecoveryPointsCloneInput] :body 
  # @return [ProceduralResponse]
  describe 'vm_recovery_points_uuid_clone_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for vm_recovery_points_uuid_delete
  # Delete a existing vm recovery point
  # This operation submits a request to delete a existing vm recovery point.
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [VmRecoveryPointIntentResponse]
  describe 'vm_recovery_points_uuid_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for vm_recovery_points_uuid_get
  # Get a existing vm recovery point
  # This operation gets a existing vm recovery point.
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [VmRecoveryPointIntentResponse]
  describe 'vm_recovery_points_uuid_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for vm_recovery_points_uuid_promote_post
  # Promote a vm recovery point.
  # Submits a request to create a task handling the promote of Live vm recovery point, returns the task reference. This operation is used to create a vm out of the Live vm recovery point. Follow the task to get the reference of the created vm. 
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @option opts [VmRecoveryPointRestoreInput] :body 
  # @return [ProceduralResponse]
  describe 'vm_recovery_points_uuid_promote_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for vm_recovery_points_uuid_put
  # Update a existing vm recovery point
  # This operation submits a request to update a existing vm recovery point based on the input parameters. 
  # @param uuid The UUID of the entity.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [VmRecoveryPointIntentResponse]
  describe 'vm_recovery_points_uuid_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for vm_recovery_points_uuid_restore_post
  # Restore a vm recovery point.
  # Submits a request to create a task handling the restore of vm recovery point, returns the task reference. This operation is used to create a vm out of the vm recovery point. Follow the task to get the reference of the created vm. 
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @option opts [VmRecoveryPointRestoreInput] :body 
  # @return [ProceduralResponse]
  describe 'vm_recovery_points_uuid_restore_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for vm_recovery_points_uuid_validate_restore_post
  # Validates the feasibility of vm restoration from the vm recovery point. 
  # Validates the feasibility of vm restoration from the vm recovery point, if not feasible return the reason behind it. 
  # @param uuid The UUID of the entity.
  # @param [Hash] opts the optional parameters
  # @return [Array<VmValidateRestoreOutputInner>]
  describe 'vm_recovery_points_uuid_validate_restore_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
